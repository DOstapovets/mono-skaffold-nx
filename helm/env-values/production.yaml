client: 
  image:
    tag: "0.2"
server:
  image:
    tag: "0.2"
# Resource limits and requests
resources:
  client:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  server:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Environment variables for production
environment:
  NODE_ENV: production
  LOG_LEVEL: warn
  ENABLE_SWAGGER: "false"

# Production-specific settings
production:
  monitoringEnabled: true
  backupEnabled: true
  highAvailability: true

# Ingress configuration for production
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
    # Enable CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: app.example.com
      paths:
        - path: /
          pathType: Prefix
          serviceName: client
          servicePort: 3001
        - path: /api
          pathType: Prefix
          serviceName: server
          servicePort: 3000
  tls:
    - secretName: app-tls-secret
      hosts:
        - app.example.com

# Redis configuration for production
redis:
  persistence: true
  highAvailability: true
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
