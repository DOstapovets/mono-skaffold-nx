name: release

on:
  - workflow_dispatch
  - push

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      
      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      
      # Cache Nx
      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/yarn.lock') }}-
            ${{ runner.os }}-nx-
      
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "gituser@example.com"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
      
      - name: Version
        shell: bash
        run: yarn nx affected --base=latest --target=version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Tag latest
        shell: bash
        run: |
          git tag -f latest
          git push origin latest --force